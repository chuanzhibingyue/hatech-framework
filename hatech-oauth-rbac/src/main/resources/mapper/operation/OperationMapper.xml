<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.com.hatechframework.server.operation.mapper.IOperationMapper">

	<resultMap id="BaseResultMap" type="cn.com.hatechframework.server.operation.vo.OperationVO">
		<id column="id" jdbcType="VARCHAR" property="id"/>
		<result column="operation_name" jdbcType="VARCHAR" property="operationName"/>
		<result column="description" jdbcType="VARCHAR" property="description"/>
		<result column="code" jdbcType="VARCHAR" property="code"/>
		<result column="icon" jdbcType="VARCHAR" property="icon"/>
		<result column="type" jdbcType="VARCHAR" property="type"/>
		<result column="order_info" jdbcType="SMALLINT" property="orderInfo"/>
		<result column="edit_user_id" jdbcType="VARCHAR" property="editUserId"/>
		<result column="edit_time" jdbcType="TIMESTAMP" property="editTime"/>
	</resultMap>
	
	<select id="findAll" resultMap="BaseResultMap">
		SELECT
			`id`, 
			`operation_name`, 
			`description`,
			`code`,
			`icon`, 
			`type`, 
			`order_info`, 
			`edit_user_id`,
			`edit_time`
		FROM
			operation
		<where>
			<if test="params.operationName != null and params.operationName != ''">
				and operation_name like concat('%',#{params.operationName},'%')
			</if>
			<if test="params.type != null and params.type != ''">
				and `type` like concat('%',#{params.type},'%')
			</if>
		</where>
		order by order_info
	</select>

	<select id="findOperationByRoles" resultType="cn.com.hatechframework.server.operation.po.OperationPO">
		select * from operation where id in (
			select operation_id from role_menu_operation where operation_id is not null and role_id in
			<foreach item="roleId" collection="list" open="(" separator="," close=")">
				#{roleId}
			</foreach>
		)
	</select>

	<insert id="batchInsert">
		INSERT INTO operation (
		`id`,
		`operation_name`,
		`description`,
		`code`,
		`icon`,
		`type`,
		`order_info`
		)
		VALUES
		<foreach collection="list" item="item" index="index" separator="," >
			(
			#{item.id},
			#{item.operationName},
			#{item.description},
			#{item.code},
			#{item.icon},
			#{item.type},
			#{item.orderInfo}
			)
		</foreach>
	</insert>
</mapper>