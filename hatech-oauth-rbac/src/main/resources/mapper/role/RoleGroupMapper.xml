<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.hatechframework.server.role.mapper.IRoleGroupMapper">

    <resultMap id="BaseResultMap" type="cn.com.hatechframework.server.role.vo.RoleGroupVO">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="role_group_name" jdbcType="VARCHAR" property="roleGroupName"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="edit_user_id" jdbcType="VARCHAR" property="editUserId"/>
        <result column="edit_time" jdbcType="TIMESTAMP" property="editTime"/>
        <collection property="roleIds" column="id" select="findRoleGroupRoleIds"></collection>
        <collection property="userIds" column="id" select="findRoleGroupUserIds"></collection>
    </resultMap>

    <select id="findAll" resultMap="BaseResultMap">
        select id, role_group_name, status, description, edit_user_id, edit_time from role_group
        <where>
            <if test="params.roleGroupName != null and params.roleGroupName != ''">
                and role_group_name like concat('%',concat(#{params.roleGroupName},'%'))
            </if>
        </where>
        order by edit_time desc
    </select>

    <select id="findRoleGroupRoleIds" resultType="java.lang.String">
        select role_id from role_group_role where role_group_id = #{id}
    </select>

    <select id="findRoleGroupUserIds" resultType="java.lang.String">
        select user_id from role_group_user where role_group_id = #{id}
    </select>

    <delete id="deleteRoleGroupRoleByRoleGroupId">
        delete from role_group_role where role_group_id = #{roleGroupId}
    </delete>

    <delete id="deleteRoleGroupUserByRoleGroupId">
        delete from role_group_user where role_group_id = #{roleGroupId}
    </delete>

    <delete id="deleteRoleGroupRoleByRoleGroupIds">
        delete from role_group_role where role_group_id in
        <foreach item="roleGroupId" collection="roleGroupIdList" open="(" separator="," close=")">
            #{roleGroupId}
        </foreach>
    </delete>

    <delete id="deleteRoleGroupUserByRoleGroupIds">
        delete from role_group_user where role_group_id in
        <foreach item="roleGroupId" collection="roleGroupIdList" open="(" separator="," close=")">
            #{roleGroupId}
        </foreach>
    </delete>
</mapper>